<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack">
        <config key="Variable_0">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="target_column"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value="Survived"/>
        </config>
        <config key="Variable_1">
            <entry key="type" type="xstring" value="variable"/>
            <entry key="name" type="xstring" value="target_column"/>
            <entry key="class" type="xstring" value="STRING"/>
            <entry key="value" type="xstring" value="Survived"/>
        </config>
    </config>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <config key="variable-filter">
            <entry key="filter-type" type="xstring" value="STANDARD"/>
            <config key="included_names">
                <entry key="array-size" type="xint" value="1"/>
                <entry key="0" type="xstring" value="target_column"/>
            </config>
            <config key="excluded_names">
                <entry key="array-size" type="xint" value="2"/>
                <entry key="0" type="xstring" value="AzurePickedFile"/>
                <entry key="1" type="xstring" value="S3PickedFile"/>
            </config>
            <entry key="enforce_option" type="xstring" value="EnforceInclusion"/>
            <config key="name_pattern">
                <entry key="pattern" type="xstring" value=""/>
                <entry key="type" type="xstring" value="Wildcard"/>
                <entry key="caseSensitive" type="xboolean" value="true"/>
            </config>
        </config>
        <entry key="variable-prefix" type="xstring" isnull="true" value=""/>
        <config key="port-names">
            <entry key="array-size" type="xint" value="3"/>
            <entry key="0" type="xstring" value="Sampling Table"/>
            <entry key="1" type="xstring" value="Models"/>
            <entry key="2" type="xstring" value="Explainable Instances"/>
        </config>
        <config key="port-descriptions">
            <entry key="array-size" type="xint" value="3"/>
            <entry key="0" type="xstring" value="Provide the table that contains feature and target column (Dataset Sample)."/>
            <entry key="1" type="xstring" value="Provide the model table from the top output of &quot;AutoML&quot; Component."/>
            <entry key="2" type="xstring" value="Provide the table with predictions that have to be explained (Explainable Instances) ."/>
        </config>
        <entry key="sub-node-description" type="xstring" value="In order to decipher the decision making process of a black-box model you can use the eXplainable Artificial Intelligence (XAI) view. The view works for machine learning classifiers for binary and multiclass targets. The component generates an interactive dashboard view visualizing explanations for a set of instances you provide, as well other charts and Machine Learning Interpretability (MLI) techniques.%%00013%%00010%%00013%%00010This component computes SHAP explanations, Partial Dependence Plot (PDP), Individual Conditional Expectation (ICE) curves and surrogate decision tree view. %%00013%%00010%%00013%%00010- SHAP values help in explaining the prediction by computing the contribution of each feature to the prediction. The sum of all SHAP values adds up to the difference between the prediction value and the average prediction in the provided sample dataset. Each explanation in the view is represented as a bubble and the aggregated sum of multiple explanations values in a violin plot.%%00013%%00010%%00013%%00010- A Partial Dependence Plot (PDP) denotes the relationship between the target and a single feature in a cartesian graph as a filled area. Individual Conditional Expectation (ICE) curves in the PDP show the reaction of a single prediction when changing a single feature.%%00013%%00010%%00013%%00010- Surrogate Decision Tree View is the result of overfitting a Decision Tree on the predictions of the original model instead of using the actual ground truth target. By committing the same mistakes of the original model, a view of the tree explains the black box model as a hierarchical decision process.%%00013%%00010%%00013%%00010The dashboard is interactive, select explanations bubbles to see the same predictions highlighted in the other views. If the component is used as a nested component you can also add additional charts to visualize its output in other ways.%%00013%%00010%%00013%%00010The user needs to provide a sample of the dataset used to train a model, the model and a set of instances (rows) from the test set. %%00013%%00010%%00013%%00010DATA INPUT REQUIREMENTS%%00013%%00010- The two input data tables (top and bottom ports) need to have exactly the same columns (Table Spec) beside the target column which can be omitted in the bottom port as you might need to explain instances for which the ground truth is not available.%%00013%%00010%%00013%%00010- The bottom input with instances to be explained can be at max 100 rows. More instances would clutter the visualization and take even more time to compute.%%00013%%00010%%00013%%00010BLACK-BOX MODEL REQUIREMENTS %%00013%%00010We recommend using the &quot;AutoML&quot; component to test the “XAI View”, but any model could be explained by the component as long as it behaves as a black box and it is captured with Integrated Deployment. Precise requirements are listed below.%%00013%%00010%%00013%%00010- The model should be captured with Integrated Deployment and have a single input and single output of type Data.%%00013%%00010%%00013%%00010- All features columns have to be provided at the input.%%00013%%00010%%00013%%00010- Any other additional columns that are not features can be provided at the input.%%00013%%00010%%00013%%00010- The output should store all the input data (features and non-features) and present attached the output predictions columns.%%00013%%00010%%00013%%00010- The output predictions should be one String type and “n” Double type, where “n” is the number of classes in the target column.%%00013%%00010%%00013%%00010- The String type prediction column should be named “Prediction([T])” where [T] is the name of your target class (e.g. “Prediction (Churn)”).%%00013%%00010%%00013%%00010- The Double type prediction columns should be named “P ([T]=[C1])”, “P ([T]=[C2])”, …, “P (T=[Cn])”, where [Cn] is the name of the class that probability is predicting (e.g. “P (Churn=not churned)” and ”P (Churn=churned)” in the binary case).%%00013%%00010%%00013%%00010Additionally, if you are not using the AutoML component, you need to provide a flow variable called “target_column” of type String with the name of your ground truth / target column in the top input of the XAI View component."/>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="port 0: Dataset Sample%%00013%%00010port 1: AutoML Model%%00013%%00010port 2: Explainable Instances"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="178"/>
        <entry key="y-coordinate" type="xint" value="818"/>
        <entry key="width" type="xint" value="160"/>
        <entry key="height" type="xint" value="45"/>
        <entry key="alignment" type="xstring" value="LEFT"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="9"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles">
            <config key="style_0">
                <entry key="start" type="xint" value="0"/>
                <entry key="length" type="xint" value="6"/>
                <entry key="fontname" type="xstring" value="Arial"/>
                <entry key="fontstyle" type="xint" value="1"/>
                <entry key="fontsize" type="xint" value="9"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
            <config key="style_1">
                <entry key="start" type="xint" value="8"/>
                <entry key="length" type="xint" value="14"/>
                <entry key="fontname" type="xstring" value="Arial"/>
                <entry key="fontstyle" type="xint" value="0"/>
                <entry key="fontsize" type="xint" value="9"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
            <config key="style_2">
                <entry key="start" type="xint" value="24"/>
                <entry key="length" type="xint" value="6"/>
                <entry key="fontname" type="xstring" value="Arial"/>
                <entry key="fontstyle" type="xint" value="1"/>
                <entry key="fontsize" type="xint" value="9"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
            <config key="style_3">
                <entry key="start" type="xint" value="46"/>
                <entry key="length" type="xint" value="6"/>
                <entry key="fontname" type="xstring" value="Arial"/>
                <entry key="fontstyle" type="xint" value="1"/>
                <entry key="fontsize" type="xint" value="9"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
            <config key="style_4">
                <entry key="start" type="xint" value="54"/>
                <entry key="length" type="xint" value="21"/>
                <entry key="fontname" type="xstring" value="Arial"/>
                <entry key="fontstyle" type="xint" value="0"/>
                <entry key="fontsize" type="xint" value="9"/>
                <entry key="fgcolor" type="xint" value="0"/>
            </config>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="isDeletable" type="xboolean" value="false"/>
    <entry key="factory" type="xstring" value="org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory"/>
    <entry key="node-name" type="xstring" value="Component Input"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Core API"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.core"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.4.0.v202106241953"/>
    <entry key="node-feature-name" type="xstring" value="KNIME AP Core feature"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.core.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.4.0.v202106241953"/>
    <config key="factory_settings">
        <config key="port_0">
            <entry key="index" type="xint" value="0"/>
            <config key="type">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <config key="type">
                <entry key="object_class" type="xstring" value="org.knime.core.node.workflow.capture.WorkflowPortObject"/>
            </config>
        </config>
        <config key="port_2">
            <entry key="index" type="xint" value="2"/>
            <config key="type">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
    </config>
    <entry key="name" type="xstring" value="Component Input"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
        <config key="port_2">
            <entry key="index" type="xint" value="2"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
        <config key="port_3">
            <entry key="index" type="xint" value="3"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
