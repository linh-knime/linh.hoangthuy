<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <config key="variable-filter">
            <entry key="filter-type" type="xstring" value="STANDARD"/>
            <config key="included_names">
                <entry key="array-size" type="xint" value="0"/>
            </config>
            <config key="excluded_names">
                <entry key="array-size" type="xint" value="2"/>
                <entry key="0" type="xstring" value="AzurePickedFile"/>
                <entry key="1" type="xstring" value="S3PickedFile"/>
            </config>
            <entry key="enforce_option" type="xstring" value="EnforceInclusion"/>
            <config key="name_pattern">
                <entry key="pattern" type="xstring" value=""/>
                <entry key="type" type="xstring" value="Wildcard"/>
                <entry key="caseSensitive" type="xboolean" value="true"/>
            </config>
        </config>
        <entry key="variable-prefix" type="xstring" isnull="true" value=""/>
        <config key="port-names">
            <entry key="array-size" type="xint" value="1"/>
            <entry key="0" type="xstring" value="Data to Train and Test model"/>
        </config>
        <config key="port-descriptions">
            <entry key="array-size" type="xint" value="1"/>
            <entry key="0" type="xstring" value="A KNIME Table with data rows with input features and ground truth."/>
        </config>
        <entry key="sub-node-description" type="xstring" value="This Component automatically trains supervised machine learning models for both binary and multiclass classification.  The component is able to automate the whole ML cycle by performing some data preparation, parameter optimization with cross validation, scoring, evaluation and selection. The component also captures the entire end to end process and outputs the deployment workflow using the KNIME Integrated Deployment Extension.%%00013%%00010%%00013%%00010STEP-BY-STEP GUIDE:%%00013%%00010- Drag&amp;drop the Component from KNIME Hub to KNIME Analytics Platform.%%00013%%00010- Connect with your data table of features and target column. Consider using a subsample first.%%00013%%00010- IMPORTANT! Execute all up-stream nodes.%%00013%%00010- Double click Component to open its dialogue.%%00013%%00010- Save your settings with “OK” and execute the Component.%%00013%%00010- Wait for models to train, tune, validate, etc. and the best one to be selected and exported.%%00013%%00010- Connect Workflow Executor/Writer node to the Component output to reuse the model.%%00013%%00010- (OPTIONAL) Right click Component : “Component” &gt; “Open” to inspect our implementation for you to customize.%%00013%%00010- (IF PREVIOUSLY ENABLED) Right click Component : “Open Interactive View: AutoML” to inspect all trained models. Selecting one manually (with “Apply&amp;Close” in local View bottom right corner controls) unfortunately requires training all models again.%%00013%%00010%%00013%%00010DATA PREPARATION: %%00013%%00010Before training the models the data is cleaned by replacing the missing values with the categorical column most frequent value or the mean for the numerical columns. Optionally the categorical data can be one-hot encoded and columns with too many unique values are removed based on a user-defined parameter. Numerical features are all converted to double, normalized using min-max normalization. The data is automatically split into the two train and test partitions using stratified sampling technique on the target class and 80% split. The data preparation models are stored for deployment both for pre-processing and post-processing the data around the model predictor.%%00013%%00010%%00013%%00010MODEL TRAINING: %%00013%%00010Each model has a number of parameters to be tuned using cross validation and the user-defined evaluation metric on train data. The extent of the parameter optimization, the optimization strategy as well as other settings of the model can be changed directly in the Component.%%00013%%00010%%00013%%00010- Naive Bayes: trained with optimized parameter “Default probability”.%%00013%%00010- Logistic Regression: trained with optimized parameter “Step size”.%%00013%%00010- Neural Network: an Rprop Multi-layer Perceptron (MLP) trained with optimized parameters  “Number of hidden layers” and “Number of hidden neurons per layer”.%%00013%%00010- Gradient Boosted Trees: trained with optimized parameter “Number of trees”.%%00013%%00010- Decision Tree: trained with optimized parameter “Min number records per node”.%%00013%%00010- Random Forest: trained with optimized parameters “Tree Depth”, “Number of models” and “Minimum child node size”.%%00013%%00010- XGBoost Trees: trained with optimized parameters  “eta” and “max depth”.%%00013%%00010- Generalized Linear Model (H2O): trained with the KNIME H2O Machine Learning Integration with optimized parameters “lambda” and “alpha”.%%00013%%00010- Deep Learning (Keras): trained with KNIME Deep Learning - Keras Integration with no parameter optimization and two simple architectures for binary and multiclass classification. %%00013%%00010   A few simple heuristics are in place to shape the network architecture and Keras training process based on the size of the input data.%%00013%%00010%%00013%%00010MODEL SCORING AND SELECTION:%%00013%%00010After the training of the specified models is completed and all models are stored in a single table, the system applies the model to the test set. The predictions of all models are scored against the ground truth and several performance metrics are computed. The best model is selected using the performance metric specified by the user. %%00013%%00010%%00013%%00010DEPLOYMENT WORKFLOW:%%00013%%00010The data pre-processing, the best model and the data post-processing are captured via the KNIME Integrated Deployment Extension. The end-to-end encapsulated workflow is provided at the output of the Component and it can be used to score raw new data in deployment. Connect to Workflow Writer node or Workflow Executor node to reuse the trained model where ever needed.%%00013%%00010%%00013%%00010AUTOML OUTPUT METADATA:%%00013%%00010The Component additionally outputs flow variables for advanced users.%%00013%%00010- &quot;metric_auto&quot; (String) : the name of the user-defined performance metric.%%00013%%00010- &quot;target_column&quot; (String) : the name of the user-defined target column.%%00013%%00010- &quot;positive&quot; (String) : the positive class used in binary classification.%%00013%%00010- &quot;exported_model&quot; (String) : the best model that was selected.%%00013%%00010- &quot;exported_model_params” (String Array) : list of the optimized parameters names and values for the exported model.%%00013%%00010- &quot;trained_models&quot; (String Array) : list of all the selected models that were successfully trained and ranked by &quot;metric_auto&quot; metric.%%00013%%00010- &quot;trained_metrics&quot; (Double Array) : list of the &quot;metric_auto&quot; metrics for all “trained_models”.%%00013%%00010- &quot;failed_models&quot; (String Array) : list of all selected models failed during training or testing.%%00013%%00010- &quot;static_prediction_models&quot; (String Array) : models always predicting the majority class are discarded and listed here."/>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value=""/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="47"/>
        <entry key="y-coordinate" type="xint" value="459"/>
        <entry key="width" type="xint" value="106"/>
        <entry key="height" type="xint" value="15"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="9"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="isDeletable" type="xboolean" value="false"/>
    <entry key="factory" type="xstring" value="org.knime.core.node.workflow.virtual.subnode.VirtualSubNodeInputNodeFactory"/>
    <entry key="node-name" type="xstring" value="Component Input"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Core API"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.core"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.4.0.v202106241953"/>
    <entry key="node-feature-name" type="xstring" value="KNIME AP Core feature"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.core.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.4.0.v202106241953"/>
    <config key="factory_settings">
        <config key="port_0">
            <entry key="index" type="xint" value="0"/>
            <config key="type">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
    </config>
    <entry key="name" type="xstring" value="Component Input"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
